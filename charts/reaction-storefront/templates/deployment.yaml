{{- $fullName := include "reaction-storefront.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    app.kubernetes.io/name: {{ $fullName }}
    app.kubernetes.io/component: frontend
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ $fullName }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "reaction-storefront.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
{{- if .Values.annotations }}
      annotations:
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end }}
      labels:
        app.kubernetes.io/name: {{ include "reaction-storefront.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ printf "%s-%s" $fullName "config" }}
            - configMapRef:
                name: {{ printf "%s-%s" $fullName "oauth2" }}
            - configMapRef:
                name: {{ printf "%s-%s" $fullName "radial" }}
{{- if .Values.contentstack.enabled }}
            - configMapRef:
                name: {{ printf "%s-%s" $fullName "contentstack" }}
{{- end }}
{{- if .Values.segmentAnalytics.enabled }}
            - configMapRef:
                name: {{ printf "%s-%s" $fullName "segmentanalytics" }}
{{- end }}
{{- if .Values.sentry.enabled }}
            - configMapRef:
                name: {{ printf "%s-%s" $fullName "sentry" }}
{{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: admin
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: admin
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
