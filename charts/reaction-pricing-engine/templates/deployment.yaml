{{- $fullName := include "reaction-pricing-engine.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    app.kubernetes.io/name: {{ $fullName }}
    app.kubernetes.io/component: pricing-engine
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "reaction-pricing-engine.chart" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "reaction-pricing-engine.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "reaction-pricing-engine.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
      - name: data
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "reaction-pricing-engine.fullname" . }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      containers:
        - name: prometheus-jmx-exporter
          image: {{ .Values.jmx.image }}:{{ .Values.jmx.imageTag }}
          ports:
          - name: jmx-exporter
            containerPort: {{ .Values.jmx.port }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.mountPath }}
          envFrom:
            - configMapRef:
                name: {{ printf "%s-%s" $fullName "config" }}
          ports:
            - name: api
              containerPort: {{ .Values.service.apiPort }}
            - name: healthcheck
              containerPort: {{ .Values.service.healthcheckPort }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.service.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.service.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.service.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.service.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.service.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.service.healthcheckPath }}
              port: {{ .Values.service.healthcheckPort }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.service.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.service.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.service.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.service.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.service.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.service.healthcheckPath }}
              port: {{ .Values.service.healthcheckPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
